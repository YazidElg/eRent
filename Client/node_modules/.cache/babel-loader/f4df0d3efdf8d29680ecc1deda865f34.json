{"ast":null,"code":"import _defineProperty from \"D:\\\\eRent\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\eRent\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\eRent\\\\Client\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Header(props) {\n  var _classNames;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobileOpen = _React$useState2[0],\n      setMobileOpen = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var headerColorChange = function headerColorChange() {\n    var color = props.color,\n        changeColorOnScroll = props.changeColorOnScroll;\n    var windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  var color = props.color,\n      rightLinks = props.rightLinks,\n      leftLinks = props.leftLinks,\n      brand = props.brand,\n      fixed = props.fixed,\n      absolute = props.absolute;\n  var appBarClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.appBar, true), _defineProperty(_classNames, classes[color], color), _defineProperty(_classNames, classes.absolute, absolute), _defineProperty(_classNames, classes.fixed, fixed), _classNames));\n  var brandComponent = /*#__PURE__*/React.createElement(Button, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, brand);\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, leftLinks !== undefined ? brandComponent : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, leftLinks !== undefined ? /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, leftLinks) : brandComponent), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, rightLinks), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: mobileOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, leftLinks, rightLinks))));\n}\nHeader.defaultProp = {\n  color: \"white\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};","map":{"version":3,"sources":["D:/eRent/Client/src/components/Header/Header.js"],"names":["React","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","styles","useStyles","Header","props","classes","useState","mobileOpen","setMobileOpen","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","rightLinks","leftLinks","brand","fixed","absolute","appBarClasses","appBar","brandComponent","title","container","undefined","flex","paper","drawerPaper","appResponsive","defaultProp","propTypes","oneOf","node","string","bool","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  React.useEffect(() => {\r\n    if (props.changeColorOnScroll) {\r\n      window.addEventListener(\"scroll\", headerColorChange);\r\n    }\r\n    return function cleanup() {\r\n      if (props.changeColorOnScroll) {\r\n        window.removeEventListener(\"scroll\", headerColorChange);\r\n      }\r\n    };\r\n  });\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const headerColorChange = () => {\r\n    const { color, changeColorOnScroll } = props;\r\n    const windowsScrollTop = window.pageYOffset;\r\n    if (windowsScrollTop > changeColorOnScroll.height) {\r\n      document.body\r\n        .getElementsByTagName(\"header\")[0]\r\n        .classList.remove(classes[color]);\r\n      document.body\r\n        .getElementsByTagName(\"header\")[0]\r\n        .classList.add(classes[changeColorOnScroll.color]);\r\n    } else {\r\n      document.body\r\n        .getElementsByTagName(\"header\")[0]\r\n        .classList.add(classes[color]);\r\n      document.body\r\n        .getElementsByTagName(\"header\")[0]\r\n        .classList.remove(classes[changeColorOnScroll.color]);\r\n    }\r\n  };\r\n  const { color, rightLinks, leftLinks, brand, fixed, absolute } = props;\r\n  const appBarClasses = classNames({\r\n    [classes.appBar]: true,\r\n    [classes[color]]: color,\r\n    [classes.absolute]: absolute,\r\n    [classes.fixed]: fixed\r\n  });\r\n  const brandComponent = <Button className={classes.title}>{brand}</Button>;\r\n  return (\r\n    <AppBar className={appBarClasses}>\r\n      <Toolbar className={classes.container}>\r\n        {leftLinks !== undefined ? brandComponent : null}\r\n        <div className={classes.flex}>\r\n          {leftLinks !== undefined ? (\r\n            <Hidden smDown implementation=\"css\">\r\n              {leftLinks}\r\n            </Hidden>\r\n          ) : (\r\n            brandComponent\r\n          )}\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          {rightLinks}\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n      <Hidden mdUp implementation=\"js\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={\"right\"}\r\n          open={mobileOpen}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          onClose={handleDrawerToggle}\r\n        >\r\n          <div className={classes.appResponsive}>\r\n            {leftLinks}\r\n            {rightLinks}\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.defaultProp = {\r\n  color: \"white\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"transparent\",\r\n    \"white\",\r\n    \"rose\",\r\n    \"dark\"\r\n  ]),\r\n  rightLinks: PropTypes.node,\r\n  leftLinks: PropTypes.node,\r\n  brand: PropTypes.string,\r\n  fixed: PropTypes.bool,\r\n  absolute: PropTypes.bool,\r\n  // this will cause the sidebar to change the color from\r\n  // props.color (see above) to changeColorOnScroll.color\r\n  // when the window.pageYOffset is heigher or equal to\r\n  // changeColorOnScroll.height and then when it is smaller than\r\n  // changeColorOnScroll.height change it back to\r\n  // props.color (see above)\r\n  changeColorOnScroll: PropTypes.shape({\r\n    height: PropTypes.number.isRequired,\r\n    color: PropTypes.oneOf([\r\n      \"primary\",\r\n      \"info\",\r\n      \"success\",\r\n      \"warning\",\r\n      \"danger\",\r\n      \"transparent\",\r\n      \"white\",\r\n      \"rose\",\r\n      \"dark\"\r\n    ]).isRequired\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}